name: Sync Changes to Personal Repo

on:
  push:
    branches:
      - "**"

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Organization Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Run Tests
        run: pnpm test --verbose

      - name: Run Build
        env:
          LIVEBLOCKS_SECRET_KEY: ${{ secrets.LIVEBLOCKS_SECRET_KEY }}
        run: pnpm run build

      - name: Set up Git Config
        run: |
          # Git 사용자 정보 설정
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Push Changes to Personal Repository
        env:
          GH_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          echo "Syncing branch: $BRANCH_NAME"

          # Starmix에 클론
          git clone https://x-access-token:${GH_TOKEN}@github.com/starmix-bot/checkmate-frontend.git
          cd checkmate-frontend

          # 원격 레포지토리에서 'main' 또는 'master' 브랜치 체크
          git fetch origin  # 모든 브랜치 정보 가져오기

          if git ls-remote --heads origin "$BRANCH_NAME" | grep "$BRANCH_NAME"; then
            git checkout "$BRANCH_NAME"
            git pull origin "$BRANCH_NAME"
          else
            git checkout -b "$BRANCH_NAME"
          fi

          # 기존 파일 삭제 후 새로운 빌드 파일 복사
          rm -rf *  # 기존 파일 삭제

          # `rsync`를 사용하여 상위 디렉토리의 모든 파일을 복사 (현재 디렉토리를 제외하고 복사)
          rsync -av \
            --exclude './checkmate-frontend' \
            --exclude '.git' \
            --exclude 'node_modules' \
            --exclude 'build' \
            --exclude 'dist' \
            --exclude '.next' \
            --exclude 'out' \
            --exclude '.turbo' \
            ../* .


          # 변경 사항 확인 후 커밋 및 푸시
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync changes from organization repo to $BRANCH_NAME"
            git push origin "$BRANCH_NAME"
          fi
