name: Sync Changes to Personal Repo

on:
  push:
    branches:
      - '**'

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Organization Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: npm install

      - name: Run Build
        run: npm run build

      - name: Set up Git Config
        run: |
          # Git 사용자 정보 설정
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Push Changes to Personal Repository
        env:
          GH_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }} # GitHub Secrets에서 개인 액세스 토큰을 읽어옵니다.
        run: |
          # 개인 레포지토리 클론
          git clone https://x-access-token:${GH_TOKEN}@github.com/pjookim/checkmate-frontend-deploy.git
          cd checkmate-frontend-deploy

          # 원격 레포지토리에서 'main' 또는 'master' 브랜치 체크
          git fetch origin  # 모든 브랜치 정보 가져오기

          # 'main' 또는 'master' 브랜치로 체크아웃
          if git show-ref --verify --quiet refs/heads/main; then
            git checkout main
          elif git show-ref --verify --quiet refs/heads/master; then
            git checkout master
          else
            echo "No valid branch found. Please check the target branch."
            exit 1
          fi

          # 기존 파일 삭제 후 새로운 빌드 파일 복사
          rm -rf *  # 기존 파일 삭제

          # `rsync`를 사용하여 상위 디렉토리의 모든 파일을 복사 (현재 디렉토리를 제외하고 복사)
          rsync -av \
            --exclude './checkmate-frontend-deploy' \
            --exclude '.git' \
            --exclude 'build' \
            --exclude 'dist' \
            --exclude '.next' \
            --exclude 'out' \
            ../* .


          # 변경 사항 확인 후 커밋 및 푸시
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync changes from organization repo"
            git push https://x-access-token:${GH_TOKEN}@github.com/pjookim/checkmate-frontend-deploy.git $(git rev-parse --abbrev-ref HEAD)
          fi
